"valida los tipos de nivel"
enum Level {
  principiante
  intermedio
  avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String @deprecated
  people: [Student]
  level: Level
}

interface Person {
  _id: ID!
  name: String!
  email: String!
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person {
  _id: ID!
  name: String!
  email: String!
  phone: String
}

type Query {
  # Devuelve todos los cursos
  getCourses: [Course]
  # Devuelve un curso
  getCourse(id: ID!): Course
  # Devuelve todos los estudiantes
  getPeople: [Person]
  # Devuelve un estudiante
  getPerson(id: ID!): Person
  "Busqueda global"
  searchItems(keyword: String!): [GlobalSearch]
}

# -------------------
# matations
# -------------------

# Course
input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
  level: Level
}
input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}
# Persons
input PersonInput {
  name: String!
  email: String!
  avatar: String
  phone: String
}
input PersonEditInput {
  name: String
  email: String
  avatar: String
  phone: String
}

type Mutation {
  # Crear un curso
  createCourse(input: CourseInput!): Course
  # Edita un curso
  editCourse(_id: ID!, input: CourseEditInput): Course
  "Eliminar un curo"
  deleteCourse(_id: ID!): String
  # Crea un estudiante
  createPerson(input: PersonInput!): Person
  # Edita un estudiante
  editPerson(_id: ID!, input: PersonEditInput): Person
  "Eliminar un estudiante"
  deletePerson(_id: ID!): String
  "Agrega una persona aun curso"
  addPeople(courseID: ID!, personID: ID!): Course
}
