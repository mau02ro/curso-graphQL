type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
}
type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  # Devuelve todos los cursos
  getCourses: [Course]
  # Devuelve un curso
  getCourse(id: ID!): Course
  # Devuelve todos los estudiantes
  getStudents: [Student]
  # Devuelve un estudiante
  getStudent(id: ID!): Student
}

# -------------------
# matations
# -------------------

# Course
input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}
input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}
# students
input StudentInput {
  name: String!
  email: String!
}
input StudentEditInput {
  name: String
  email: String
}

type Mutation {
  # Crear un curso
  createCourse(input: CourseInput!): Course
  # Edita un curso
  editCourse(_id: ID!, input: CourseEditInput): Course
  "Eliminar un curo"
  deleteCourse(_id: ID!): String
  # Crea un estudiante
  createStudent(input: StudentInput!): Student
  # Edita un estudiante
  editStudent(_id: ID!, input: StudentEditInput): Student
  "Eliminar un estudiante"
  deleteStudent(_id: ID!): String
  "Agrega una persona aun curso"
  addPeople(courseID: ID!, personID: ID!): Course
}
